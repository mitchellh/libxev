on: [push, pull_request]
name: Test
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]

        target: [
          aarch64-linux-gnu,
          aarch64-linux-musl,
          x86_64-linux-gnu,
          x86_64-linux-musl,
          aarch64-macos,
          x86_64-macos,
          wasm32-wasi

          # Broken but not in any obvious way:
          # x86-linux-gnu,
          # x86-linux-musl,

          # Not yet supported:
          # i386-windows,
          # x86_64-windows-gnu,
        ]
    runs-on: ${{ matrix.os }}
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    # Install Nix and use that to run our tests so our environment matches exactly.
    - uses: cachix/install-nix-action@v21
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    # Run our checks to catch quick issues
    - run: nix flake check

    # Run our go tests within the context of the dev shell from the flake. This
    # will ensure we have all our dependencies.
    - name: test
      run: nix develop -c zig build -fsummary -Dtarget=${{ matrix.target }}

  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    # Install Nix and use that to run our tests so our environment matches exactly.
    - uses: cachix/install-nix-action@v21
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    # Run our checks to catch quick issues
    - run: nix flake check

    # Run our go tests within the context of the dev shell from the flake. This
    # will ensure we have all our dependencies.
    - name: test
      run: nix develop -c zig build test -fsummary
    - name: test wasi
      run: nix develop -c zig build test -Dtarget=wasm32-wasi -fwasmtime -fsummary

    - name: build all benchmarks and examples
      run: nix develop -c zig build -Dexample -Dbench -fsummary

    # Run a full build to ensure that works
    - run: nix build
